\section{Discussion}
\label{sec:discussion}
%
%
Several points of our lens proposal are worth discussing, as follows.

\vspace{0.15cm}
\noindent\textbf{Lens activation:} Our lens can support two types of explorations. First, when the user perceives a \emph{part} of a target of interest in a classical DVR image, the lens can be used to reveal the target in full detail. This \emph{directed} exploration supports the task `show me more information about \emph{this} item'. The use-cases in Secs.~\ref{sec:baggage}-\ref{sec:atc} are of this type. Secondly, the user can open up a DVR volume at a 2D location from which no partial detail is visible. This is useful when we know that there \emph{is} an interesting target buried in the volume even without seeing it (\emph{corpus callosum} use-case in Sec.~\ref{sec:dti}), thus supports the task `show me the data I \emph{know} it is somewhere in there', or for free exploration to find unknown patterns in a volume, \emph{i.e.} for the task `show me what this volume \emph{may} hide in it'. In the first exploration type (target not fully occluded), our lens is simple and rapid to use -- point, click, and optionally rotate light or viewpoint. In the second exploration type (target fully occluded or not even sure whether an interesting target exists in the data), the lens is equally simple to use, but several tries to select a suitable focus point and lens depth are needed.

\vspace{0.15cm}
\noindent\textbf{Lens shape:} Occluders are pushed away, and deformed, isotropically (Secs.~\ref{sec:scattering}, \ref{continuity}). This simple lens model requires a single parameter, the lens radius $R$, which makes its usage easy. The deformations evolve smoothly from the lens center (maximal) to outside the lens (no deformation), see Sec.~\ref{continuity}, which effectively blends the local (in lens) focus with the global (out of lens) context (R3). However, this strongly compresses the deformed occluders close to the lens border, making them hardly visible when the lens is fully active. A possible refinement would be to reduce the deformation of the pushed-away occluders while still pushing them away, thereby improving the F+C effect (R3). However, this would occlude areas outside the lens, basically moving occlusion from \emph{inside} the lens to \emph{outside} and close to it. Finding an optimal balance between minimal deformation (so one can recognize the pushed-away occluders) and minimal clutter (so these occluders do not destroy the lens context) is a topic for future work. Separately, deformed rays may intersect with straight rays, thereby sampling the same voxel(s) to different image pixels. We did not observe in our usage any artifacts that can be ascribed to this issue, nor did the other users of our tool. This can be explained by the fact that such ray intersections are relatively few and we use a compositing transfer function, akin to a low-pass filter.

\vspace{0.15cm}
\noindent\textbf{Parameter setting:} Our lens depends on several parameters: the 2D lens center $\mathbf{f}$, lens radius $R$, lens axis direction $\mathbf{a}$, local light direction $\mathbf{l}^{lens}$, scattering start-distance $t_{min}$, and gathering and scattering parameters $\alpha$ and $\beta$. All these parameters are controlled via a mouse-driven virtual trackball, key modifiers, and the arrow keys (Sec.~\ref{sec:principle}). As the lens works at 15 frames per second, the user can quickly tune the parameters and see their effect (R1). Moreover, all parameters start with good preset values (Sec.~\ref{sec:principle}). A possible refinement would be to pre-segment the target, based on user-given values for $\mathbf{f}$, $R$, and $t_{min}$, thereby determining $\beta$ automatically. However, we believe that manual control of the scattering $\beta$ is important to allow users to choose their most suitable field-of-view angle. In fact, this flexibility allows a better exploration of the local context (R2).

\vspace{0.15cm}
\noindent\textbf{Implementation:} We implement our lens by modifying the ray trajectories constructed in the inner loop (per-pixel raycasting) of a public DVR raycaster\,\cite{cudasdk}. Apart from this, we change the per-voxel lighting and transfer function based on the voxel location in the lens and the parameters given by user interaction (Sec.~\ref{sec:inter_expl}). Such changes are limited and easily applicable to any (parallel) raycaster.

\vspace{0.15cm}
\noindent\textbf{Limitations:} As explained, de-occluding a target requires either a small fragment thereof to be visible (if so, de-occlusion is very simple and fast), or requires the user to choose the lens focus and target depth based on other insights (which, as explained, requires more trial-and-error). At a higher level, many lens mechanisms exist in the literature, as discussed in Sec.~\ref{sec:related_work}. While we have argued that, to our knowledge, none of them simultaneously supports requirements R1,$\ldots$,R4, comparing such mechanisms with our lens for specific use-cases and datasets is an important test for the \emph{end-to-end} effectiveness of our proposal. We have not covered this point as obtaining (or replicating)  implementations of such lenses is very challenging. This remains an important open point for future work -- both for our proposal but also for all other volumetric lens proposals in the literature. In particular, none of the techniques in Tab.~\ref{tab:methods} were compared side-by-side against other techniques. We have performed three user evaluations involving specialists in airport baggage security (Sec.~\ref{sec:baggage}), pulmonology (Sec.~\ref{sec:chest}), and air traffic control (Sec.~\ref{sec:atc}). In all cases, users were not involved in this work, nor with other work of the authors. However, the set-up of these evaluations stays at the level of formative user experiments. To confirm and refine the obtained (positive) findings, more formal user studies are needed, which we plan to cover next.
